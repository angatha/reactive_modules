module P1 is
  interface error, x1, x2: B; pc1, pc2: { in_cs, out_cs, req_cs }

  lazy atom A controls pc1, x1 reads pc1, pc2, x1, x2
  init
    [] True -> pc1´ := out_cs; x1´ := B
  update
    [] pc1 == out_cs                              -> pc1´ := req_cs; x1´ := x2
    [] pc1 == req_cs & (pc2 == out_cs | x1 != x2) -> pc1´ := in_cs
    [] pc1 == in_cs                               -> pc1´ := out_cs

  lazy atom B controls pc2, x2 reads pc1, pc2, x1, x2
  init
    [] True -> pc2´ := out_cs; x2´ := B
  update
    [] pc2 == out_cs                              -> pc2´ := req_cs; x2´ := !x1
    [] pc2 == req_cs & (pc1 == out_cs | x1 == x2) -> pc2´ := in_cs
    [] pc2 == in_cs                               -> pc2´ := out_cs

  atom Monitor controls error reads pc1, pc2
  init
    [] True -> error´ := False
  update
    [] pc1 == in_cs & pc2 == in_cs -> error´ := True
    [] pc1 != in_cs | pc2 != in_cs ->